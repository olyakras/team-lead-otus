#YAML
  SOLID:
    block1: Нарушение OCP Принцип открытости-закрытости - метод должен быть открыт для расширения, но не изменения. Если в блоке понадобится добавить расчет площади новой формы, например, куба, метод нужно будет переписывать
    block2: Нарушение ISP Принцип разделения интерфейсов - классу Robot не нужна функция eat, в родительском классе есть функция, которая не нужна наследуемому классу, и ему приходится его реализовывать
    block3: Нарушение DIP Принцип инверсии зависимостей - тесно связан метод отправки уведомления с методом размещения заказа. Если в будущем понадобится отправлять уведомление не только по заказу для размещения, но, например, для уведомления о доставке заказа в ПВЗ, метод придется сильно переписывать не только для новых функций, но и в уже реализованном функционале
    block4: Нарушение SRP единственной ответственности - метод operate выполняет функцию включения и выключения, при этом функционал по включению также реализован в классе LightBulb, то есть нет класса, который бы выполнял саму логику включения/выключения
    block5: Нарушение LSP Принцип подстановки Лисков - программа не работает как ожидалось для метода fly родительского класса 
